apiVersion: psmdb.percona.com/v1-10-0
kind: PerconaServerMongoDB
metadata:
  name: sample-cluster-name
#  finalizers:
#    - delete-psmdb-pvc
spec:
#  platform: openshift
#  clusterServiceDNSSuffix: svc.cluster.local
#  pause: true
#  unmanaged: false
  crVersion: 1.10.0
  image: percona/percona-server-mongodb:4.4.8-9
  imagePullPolicy: Always
#  imagePullSecrets:
#    - name: private-registry-credentials
#  runUid: 1001
  allowUnsafeConfigurations: true
  updateStrategy: SmartUpdate
  upgradeOptions:
    versionServiceEndpoint: https://check.percona.com
    apply: 4.4-recommended
    schedule: "0 2 * * *"
    setFCV: true
  secrets:
    users: my-cluster-name-secrets
  pmm:
    enabled: false
    image: percona/pmm-client:2.18.0
    serverHost: monitoring-service
#    mongodParams: --environment=ENVIRONMENT
#    mongosParams: --environment=ENVIRONMENT
  replsets:

  - name: rs0
    size: 3
    storage:
      engine: wiredTiger
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
    nodeSelector:
      worker-type: dbms-worker
    expose:
      enabled: false
      exposeType: ClusterIP
    nonvoting:
      enabled: false
      size: 1
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
    arbiter:
      enabled: false
      size: 1
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
    resources:
      limits:
        cpu: "8000m"
        memory: "16G"
      requests:
        cpu: "8000m"
        memory: "16G"
    volumeSpec:
      persistentVolumeClaim:
        storageClassName: local-path
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Gi

  - name: rs0
    size: 3
    storage:
      engine: wiredTiger
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
    nodeSelector:
      worker-type: dbms-worker
    expose:
      enabled: false
      exposeType: ClusterIP
    nonvoting:
      enabled: false
      size: 1
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
    arbiter:
      enabled: false
      size: 1
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
    resources:
      limits:
        cpu: "8000m"
        memory: "16G"
      requests:
        cpu: "8000m"
        memory: "16G"
    volumeSpec:
      persistentVolumeClaim:
        storageClassName: local-path
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Gi

  - name: rs2
    size: 3
    storage:
      engine: wiredTiger
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
    nodeSelector:
      worker-type: dbms-worker
    expose:
      enabled: false
      exposeType: ClusterIP
    nonvoting:
      enabled: false
      size: 1
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
    arbiter:
      enabled: false
      size: 1
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
    resources:
      limits:
        cpu: "8000m"
        memory: "16G"
      requests:
        cpu: "8000m"
        memory: "16G"
    volumeSpec:
      persistentVolumeClaim:
        storageClassName: local-path
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Gi  

  - name: rs3
    size: 3
    storage:
      engine: wiredTiger
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
    nodeSelector:
      worker-type: dbms-worker
    expose:
      enabled: false
      exposeType: ClusterIP
    nonvoting:
      enabled: false
      size: 1
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
    arbiter:
      enabled: false
      size: 1
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
    resources:
      limits:
        cpu: "8000m"
        memory: "16G"
      requests:
        cpu: "8000m"
        memory: "16G"
    volumeSpec:
      persistentVolumeClaim:
        storageClassName: local-path
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Gi

  sharding:
    enabled: true

    configsvrReplSet:
      size: 3
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
      nodeSelector:
        worker-type: dbms-worker
      storage:
        engine: wiredTiger
      podDisruptionBudget:
        maxUnavailable: 1
      expose:
        enabled: false
        exposeType: ClusterIP
      resources:
        limits:
          cpu: "1000m"
          memory: "2G"
        requests:
          cpu: "1000m"
          memory: "2G"
      volumeSpec:
        persistentVolumeClaim:
          storageClassName: local-path
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 3Gi

    mongos:
      size: 3
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
      nodeSelector:
        worker-type: dbms-worker
      resources:
        limits:
          cpu: "2000m"
          memory: "0.5G"
        requests:
          cpu: "2000m"
          memory: "0.5G"
      expose:
        exposeType: ClusterIP

  mongod:
    net:
      port: 27017
      hostPort: 0
    security:
      redactClientLogData: false
      enableEncryption: true
      encryptionKeySecret: my-cluster-name-mongodb-encryption-key
      encryptionCipherMode: AES256-CBC
    setParameter:
      ttlMonitorSleepSecs: 60
      wiredTigerConcurrentReadTransactions: 128
      wiredTigerConcurrentWriteTransactions: 128
    storage:
      engine: wiredTiger
      inMemory:
        engineConfig:
          inMemorySizeRatio: 0.9
      wiredTiger:
        engineConfig:
          cacheSizeRatio: 0.5
          directoryForIndexes: false
          journalCompressor: snappy
        collectionConfig:
          blockCompressor: snappy
        indexConfig:
          prefixCompression: true
    operationProfiling:
      mode: slowOp
      slowOpThresholdMs: 100
      rateLimit: 100

  backup:
    enabled: true
    restartOnFailure: true
    image: perconalab/percona-server-mongodb-operator:main-backup
    serviceAccountName: percona-server-mongodb-operator
    storages:
    pitr:
      enabled: false
    tasks:

